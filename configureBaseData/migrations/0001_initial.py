# Generated by Django 2.0.5 on 2019-04-02 16:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('introduction', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IpV4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan', models.IntegerField(default=0)),
                ('ip', models.GenericIPAddressField()),
                ('isManage', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machineAssetNumber', models.CharField(max_length=255)),
                ('machineOs', models.CharField(max_length=255)),
                ('machineEthNum', models.IntegerField()),
                ('loginUser', models.CharField(blank=True, max_length=255, null=True)),
                ('loginMethod', models.CharField(blank=True, max_length=255, null=True)),
                ('loginPort', models.IntegerField()),
            ],
            options={
                'verbose_name': '机器',
            },
        ),
        migrations.CreateModel(
            name='MachineLocate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ulocate', models.IntegerField()),
            ],
            options={
                'verbose_name': '设备位置',
            },
        ),
        migrations.CreateModel(
            name='MachineRack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.IntegerField()),
                ('locate', models.CharField(max_length=30)),
                ('note', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': '机架',
            },
        ),
        migrations.CreateModel(
            name='MachineRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('note', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': '机房',
            },
        ),
        migrations.CreateModel(
            name='MachineType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': '设备类型',
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aliasName', models.CharField(blank=True, max_length=30, null=True)),
                ('name', models.CharField(max_length=255)),
                ('runMachine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configureBaseData.Machine')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rowid', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('switchStatus', models.BooleanField()),
                ('programStatus', models.IntegerField()),
                ('height', models.IntegerField()),
                ('width', models.IntegerField()),
                ('outbandwidth', models.IntegerField()),
                ('inPutFirst', models.CharField(blank=True, max_length=255, null=True)),
                ('inPutSecond', models.CharField(blank=True, max_length=255, null=True)),
                ('outPutFirst', models.CharField(blank=True, max_length=255, null=True)),
                ('outPutSecond', models.CharField(blank=True, max_length=255, null=True)),
                ('outPutHttpFlow', models.URLField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.Machine')),
            ],
            options={
                'verbose_name': '频道表',
                'verbose_name_plural': '频道表',
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('introduction', models.TextField(blank=True, null=True)),
                ('typeOfBusiness', models.ManyToManyField(blank=True, to='configureBaseData.Business')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aliasName', models.CharField(blank=True, max_length=30, null=True)),
                ('name', models.CharField(max_length=255)),
                ('runMachine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configureBaseData.Machine')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, choices=[('0', '体育中心'), ('1', '微视频工作室'), ('2', '少儿社区部'), ('3', '央视新闻'), ('4', '综艺社区部'), ('5', '网络媒体事业部'), ('6', '品牌部'), ('7', '国际传播事业部'), ('8', '舆论场'), ('9', 'CGTN'), ('10', '科教纪录中心')], max_length=30, verbose_name='需求部门')),
                ('staffName', models.CharField(blank=True, max_length=30, verbose_name='负责人')),
            ],
            options={
                'verbose_name': '业务人员',
                'verbose_name_plural': '业务人员',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskName', models.CharField(max_length=255, verbose_name='任务名称')),
                ('startDate', models.DateTimeField(blank=True, null=True, verbose_name='计划开始时间')),
                ('endDate', models.DateTimeField(blank=True, null=True, verbose_name='计划结束时间')),
            ],
            options={
                'verbose_name': '保障任务',
                'verbose_name_plural': '保障任务',
            },
        ),
        migrations.CreateModel(
            name='typeOfProcesses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('typeOfBusinesses', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configureBaseData.Business')),
            ],
        ),
        migrations.CreateModel(
            name='typeOfTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeName', models.CharField(max_length=255, verbose_name='任务类型')),
            ],
            options={
                'verbose_name': '任务类型',
                'verbose_name_plural': '任务类型',
            },
        ),
        migrations.CreateModel(
            name='Vender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True)),
                ('business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='configureBaseData.Business')),
            ],
        ),
        migrations.CreateModel(
            name='VenderStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('title', models.CharField(blank=True, max_length=128)),
                ('phone', models.IntegerField()),
                ('wechat', models.CharField(blank=True, max_length=60)),
                ('mail', models.CharField(blank=True, max_length=60)),
                ('qq', models.IntegerField(blank=True)),
                ('note', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.Vender')),
            ],
        ),
        migrations.CreateModel(
            name='WorkPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateTimeField(blank=True, null=True, verbose_name='实际开始时间')),
                ('endDate', models.DateTimeField(blank=True, null=True, verbose_name='实际结束时间')),
                ('programChannel', models.CharField(max_length=255, verbose_name='频道名称')),
                ('programStatus', models.IntegerField(verbose_name='频道状态')),
                ('programName', models.CharField(max_length=255, verbose_name='节目名称')),
                ('inPutStream', models.CharField(max_length=255, verbose_name='源地址')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('adminStaff', models.ForeignKey(blank=True, default=None, on_delete=None, to='configureBaseData.Staff')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.Task')),
            ],
            options={
                'verbose_name': '工作包',
                'verbose_name_plural': '工作包',
            },
        ),
        migrations.AddField(
            model_name='task',
            name='typeOf',
            field=models.ForeignKey(on_delete=None, to='configureBaseData.typeOfTask'),
        ),
        migrations.AddField(
            model_name='staff',
            name='task',
            field=models.ManyToManyField(blank=True, to='configureBaseData.Task'),
        ),
        migrations.AddField(
            model_name='services',
            name='typeOfProcess',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configureBaseData.typeOfProcesses'),
        ),
        migrations.AddField(
            model_name='process',
            name='typeOfProcess',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configureBaseData.typeOfProcesses'),
        ),
        migrations.AddField(
            model_name='machinerack',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.MachineRoom'),
        ),
        migrations.AddField(
            model_name='machinelocate',
            name='rack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.MachineRack'),
        ),
        migrations.AddField(
            model_name='machine',
            name='machineLocate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.MachineLocate'),
        ),
        migrations.AddField(
            model_name='machine',
            name='machineType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.MachineType'),
        ),
        migrations.AddField(
            model_name='machine',
            name='machineVender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.Vender'),
        ),
        migrations.AddField(
            model_name='ipv4',
            name='MachineIp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configureBaseData.Machine'),
        ),
        migrations.AlterUniqueTogether(
            name='programdetail',
            unique_together={('machine', 'rowid')},
        ),
        migrations.AlterUniqueTogether(
            name='machinelocate',
            unique_together={('Ulocate', 'rack')},
        ),
    ]
